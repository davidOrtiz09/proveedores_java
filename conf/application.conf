# This is the main configuration file for the application.
# ~~~~~
application {
  # Secret key
  # ~~~~~
  # The secret key is used to secure cryptographics functions.
  # If you deploy your application to several instances be sure to use the same key!
  secret = "%APPLICATION_SECRET%"

  # The application languages
  # ~~~~~
  langs = "en"
}

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
play {
  filters {
    hosts {
      allowed = ["."]
    }
  }
  # Set Hikari to fixed size
  db {
    prototype {
      hikaricp {
        minimumIdle = ${fixedConnectionPool}
        maximumPoolSize = ${fixedConnectionPool}
      }
    }
  }
}

db {
  default {
    driver = org.postgresql.Driver
    url = "jdbc:postgresql://grupo4-postgres.c8tnmkic1fmi.us-east-1.rds.amazonaws.com/proveedores"
    user = postgres
    password = grupo4-secure-password
  }
}

ebean {
  default = ["model.*"]
}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

logger {
  # Root logger:
  root=ERROR

  # Logger used by the framework:
  play=INFO

  # Logger provided to your application:
  application=DEBUG
}


# Number of database connections
# See https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
fixedConnectionPool = 9



# Job queue sized to HikariCP connection pool
database {
  dispatcher {
    executor = "thread-pool-executor"
    throughput = 1
    thread-pool-executor {
      fixed-pool-size = ${fixedConnectionPool}
    }
  }
}

